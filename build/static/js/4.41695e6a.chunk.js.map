{"version":3,"sources":["components/Banner/index.jsx","constants/images.js","assets/images/orange-bg.jpg","assets/images/blue-bg.jpg","assets/images/colorful-bg.jpg","assets/images/pink-bg.jpg","features/Photo/components/PhotoCard/index.jsx","features/Photo/components/PhotoList/index.jsx","features/Photo/pages/Main/index.jsx","constants/global.js","custom-fields/InputField/index.jsx","custom-fields/SelectField/index.jsx","components/RandomPhoto/index.jsx","custom-fields/RandomPhotoField/index.jsx","features/Photo/components/PhotoForm/index.jsx","features/Photo/pages/AddEdit/index.jsx","utils/comon.js","features/Photo/index.jsx"],"names":["Banner","props","title","backgroundUrl","bannerStyle","backgroundImage","className","style","defaultProps","Images","ORANGE_BG","BLUE_BG","COLORFUL_BG","PINK_BG","PhotoCard","photo","onEditClick","onRemoveClick","src","alt","Button","outline","size","color","onClick","PhotoList","photoList","onPhotoEditClick","onPhotoRemoveClick","Row","map","Col","xs","md","lg","MainPage","dispatch","useDispatch","photos","useSelector","state","history","useHistory","console","log","Container","to","editPhotoUrl","id","push","removePhotoId","action","removePhoto","PHOTO_CATEGORY_OPTIONS","value","label","InputField","field","form","type","placeholder","disabled","name","errors","touched","showError","FormGroup","Label","for","Input","invalid","component","FormFeedback","SelectField","options","selectedOption","find","option","onChange","selectedValue","changeEvent","target","RandomPhoto","imageUrl","onImageUrlChange","onRandomButtonBlur","getRandomImageUrl","randomId","Math","trunc","random","handleRandomPhotoClick","a","randomImageUrl","onBlur","onError","href","RandomPhotoField","newImageUrl","setFieldValue","PhotoForm","initialValues","isAddMode","validationSchema","Yup","shape","required","categoryId","nullable","onSubmit","formikProps","values","isSubmitting","class","AddEditPage","photoId","useParams","editedPhoto","x","Promise","resolve","setTimeout","newPhoto","min","max","addPhoto","updatePhoto","Photo","match","useRouteMatch","exact","path","url","NotFound"],"mappings":"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","file":"static/js/4.41695e6a.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Banner.scss';\r\n\r\nBanner.propTypes = {\r\n    title: PropTypes.string,\r\n    backgroundUrl:PropTypes.string\r\n};\r\nBanner.defaultProps = {\r\n    title:'',\r\n    backgroundUrl:''\r\n}\r\n\r\nfunction Banner(props) {\r\n\r\n    const {title, backgroundUrl} = props;\r\n    const bannerStyle = backgroundUrl\r\n        ?{backgroundImage:`url(${backgroundUrl})`}:{}  // nếu truyền vào props bgUrl thì sẽ lấy ảnh đó còn không thì lấy ảnh mặc định trong banner.scss\r\n    return (\r\n        <section className=\"banner\" style={bannerStyle}>\r\n            <h1 className=\"banner__title\">{title}</h1>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default Banner;","import orangeBackground from '../assets/images/orange-bg.jpg';\r\nimport blueBackground from '../assets/images/blue-bg.jpg';\r\nimport colorfulBackground from '../assets/images/colorful-bg.jpg';\r\nimport pinkBackground from '../assets/images/pink-bg.jpg';\r\n\r\nconst Images = {\r\n    ORANGE_BG:orangeBackground,\r\n    BLUE_BG: blueBackground,\r\n    COLORFUL_BG: colorfulBackground,\r\n    PINK_BG: pinkBackground\r\n}\r\nexport default Images;","export default __webpack_public_path__ + \"static/media/orange-bg.a98c2734.jpg\";","export default __webpack_public_path__ + \"static/media/blue-bg.93b683dc.jpg\";","export default __webpack_public_path__ + \"static/media/colorful-bg.95c0fb34.jpg\";","export default __webpack_public_path__ + \"static/media/pink-bg.d6dafc0a.jpg\";","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Button } from 'reactstrap';\r\nimport './PhotoCard.scss';\r\n\r\nPhotoCard.propTypes = {\r\n  photo: PropTypes.object,\r\n  onEditClick: PropTypes.func,\r\n  onRemoveClick: PropTypes.func,\r\n};\r\n\r\nPhotoCard.defaultProps = {\r\n  photo: {},\r\n  onEditClick: null,\r\n  onRemoveClick: null,\r\n}\r\n\r\nfunction PhotoCard(props) {\r\n  const { photo, onEditClick, onRemoveClick } = props;\r\n\r\n  const handleEditClick = () => {\r\n    if (onEditClick) onEditClick(photo);\r\n  }\r\n\r\n  const handleRemoveClick = () => {\r\n    if (onRemoveClick) onRemoveClick(photo);\r\n  }\r\n\r\n  return (\r\n    <div className=\"photo\">\r\n      <img src={photo.photo} alt={photo.title} />\r\n\r\n      <div className=\"photo__overlay\">\r\n        <h3 className=\"photo__title\">{photo.title}</h3>\r\n\r\n        <div className=\"photo__actions\">\r\n          <div>\r\n            <Button outline size=\"sm\" color=\"light\" onClick={handleEditClick}>\r\n              Edit\r\n            </Button>\r\n          </div>\r\n\r\n          <div>\r\n            <Button outline size=\"sm\" color=\"danger\" onClick={handleRemoveClick}>\r\n              Remove\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PhotoCard;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Row, Col } from 'reactstrap';\r\nimport PhotoCard from '../PhotoCard';\r\n\r\nPhotoList.propTypes = {\r\n  photoList: PropTypes.array,\r\n  onPhotoEditClick: PropTypes.func,\r\n  onPhotoRemoveClick: PropTypes.func,\r\n};\r\n\r\nPhotoList.defaultProps = {\r\n  photoList: [],\r\n  onPhotoEditClick: null,\r\n  onPhotoRemoveClick: null,\r\n};\r\n\r\nfunction PhotoList(props) {\r\n  const { photoList, onPhotoEditClick, onPhotoRemoveClick } = props;\r\n\r\n  return (\r\n    <Row>\r\n      {photoList.map(photo => (\r\n        <Col key={photo.title} xs=\"12\" md=\"6\" lg=\"3\">\r\n          <PhotoCard\r\n            photo={photo}\r\n            onEditClick={onPhotoEditClick}\r\n            onRemoveClick={onPhotoRemoveClick}\r\n          />\r\n        </Col>\r\n      ))}\r\n    </Row>\r\n  );\r\n}\r\n\r\nexport default PhotoList;","import Banner from 'components/Banner';\r\nimport Images from 'constants/images';\r\nimport PhotoList from 'features/Photo/components/PhotoList';\r\nimport { removePhoto } from 'features/Photo/photoSlice';\r\n\r\nimport React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { Button, Container } from 'reactstrap';\r\nimport './index.scss';\r\nMainPage.propTypes = {};\r\n\r\nfunction MainPage(props) {\r\n\r\n  const dispatch = useDispatch();\r\n  const photos = useSelector(state => state.photos);\r\n\r\n  const history = useHistory();\r\n  console.log('List of photos: ', photos);\r\n\r\n  const handlePhotoEditClick = (photo) => {\r\n    console.log('Edit: ', photo);\r\n    const editPhotoUrl = `/photos/${photo.id}`;\r\n    history.push(editPhotoUrl);\r\n  }\r\n\r\n  const handlePhotoRemoveClick = (photo) => {\r\n    console.log('Remove: ', photo);\r\n    const removePhotoId = photo.id;\r\n    const action = removePhoto(removePhotoId);\r\n    dispatch(action);\r\n  }\r\n\r\n  return (\r\n    <div className=\"photo-main\">\r\n      <Banner title=\"🎉 Your awesome photos 🎉\" backgroundUrl={Images.PINK_BG} />\r\n\r\n      <Container className=\"text-center\">\r\n        <div className=\"py-5\">\r\n        <Button className=\"addPhoto flex\" color=\"success\"><Link to=\"/photos/add\">Add new photo</Link></Button>{' '}\r\n        </div>\r\n\r\n        <PhotoList\r\n          photoList={photos}\r\n          onPhotoEditClick={handlePhotoEditClick}\r\n          onPhotoRemoveClick={handlePhotoRemoveClick}\r\n        />\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MainPage;","export const PHOTO_CATEGORY_OPTIONS = [\r\n    {value:1, label:'Technology'},\r\n    {value:2, label:'Education'},\r\n    {value:3, label:'Nature'},\r\n    {value:4, label:'Animals'},\r\n    {value:5, label:'Styles'}\r\n];","import React from 'react';\r\nimport { FormGroup, Input, Label, FormFeedback } from 'reactstrap';\r\nimport { ErrorMessage } from 'formik';\r\nimport PropTypes from 'prop-types';\r\n\r\nInputField.propTypes = {\r\n    field: PropTypes.object.isRequired,\r\n    form: PropTypes.object.isRequired,\r\n\r\n    type: PropTypes.string,\r\n    label: PropTypes.string,\r\n    placeholder: PropTypes.string,\r\n    disabled: PropTypes.bool,\r\n};\r\n\r\nInputField.defaultProps = {\r\n    type: 'text',\r\n    label: '',\r\n    placeholder: '',\r\n    disabled: false,\r\n}\r\n\r\n\r\nfunction InputField(props) {\r\n    // Lấy dữ liệu của Control Bind vào UI Control ( Input)\r\n    const { field, form, // cua formik\r\n    type, label, placeholder, disabled  // cua minh custom\r\n    } = props;\r\n    // const{name, value, onChange, onBlur} = field; // 4 thu quan trong cua 1 control\r\n    const{name} = field; \r\n\r\n    const {errors, touched} = form; //error va touched cua form\r\n    const showError = errors[name] && touched[name]; //khi có lỗi và ta đã touch vào control này thì ta show error\r\n    return (\r\n        <FormGroup>\r\n            {label && <Label for={name}>{label}</Label>}\r\n\r\n            <Input \r\n            id={name}\r\n            // name={name}         // === ...field\r\n            // value= {value}\r\n            // onChange={onChange}\r\n            // onBlur={onBlur}\r\n            {...field}\r\n            type={type}\r\n            disabled={disabled}\r\n            placeholder={placeholder}\r\n            invalid={showError}\r\n            />\r\n\r\n        {/* {showError && <FormFeedback>{errors[name]}</FormFeedback>}  chỉ show khi thằng trước nó có invalid */}\r\n        {/* của formik */}\r\n        <ErrorMessage name={name} component={FormFeedback} /> \r\n        \r\n        </FormGroup>\r\n    );\r\n}\r\n\r\nexport default InputField;","import React from 'react';\r\nimport { FormGroup, Label, FormFeedback } from 'reactstrap';\r\nimport { ErrorMessage } from 'formik';\r\nimport PropTypes from 'prop-types';\r\nimport Select from 'react-select';\r\n\r\nSelectField.propTypes = {\r\n    field: PropTypes.object.isRequired,\r\n    form: PropTypes.object.isRequired,\r\n\r\n    options: PropTypes.array,\r\n    label: PropTypes.string,\r\n    placeholder: PropTypes.string,\r\n    disabled: PropTypes.bool,\r\n};\r\n\r\nSelectField.defaultProps = {\r\n    options: [],\r\n    label: '',\r\n    placeholder: '',\r\n    disabled: false,\r\n}\r\n\r\n\r\nfunction SelectField(props) {\r\n    const { field, form,\r\n        options, label, placeholder, disabled } = props;\r\n    const { name, value } = field;\r\n\r\n    const selectedOption = options.find(option => option.value === value);\r\n    const handleSelectedOptionChange = (selectedOption) => {\r\n        const selectedValue = selectedOption ? selectedOption.value : selectedOption;  // chua chon thi selectedOption = null con neu chon thi set value = selectOption\r\n        const changeEvent = {\r\n            target: {\r\n                name: name,\r\n                value: selectedValue\r\n            }\r\n        }\r\n        field.onChange(changeEvent);\r\n    }\r\n\r\n    \r\n    const {errors, touched} = form; \r\n    const showError = errors[name] && touched[name]; \r\n\r\n    return (\r\n        <FormGroup>\r\n            {label && <Label for={name}>{label}</Label>}\r\n\r\n            <Select\r\n                id={name}\r\n                {...field}\r\n                value={selectedOption}\r\n                onChange={handleSelectedOptionChange} //phari dat o duoi ...field\r\n\r\n                disabled={disabled}\r\n                placeholder={placeholder}\r\n                options={options}\r\n                \r\n\r\n                className={showError ? 'is-invalid' : ''}\r\n                />\r\n            <ErrorMessage name={name} component={FormFeedback} /> \r\n        </FormGroup>\r\n    );\r\n}\r\n\r\nexport default SelectField;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Button } from 'reactstrap';\r\nimport './RandomPhoto.scss';\r\n\r\nRandomPhoto.propTypes = {\r\n    name: PropTypes.string,\r\n    imageUrl: PropTypes.string,\r\n    onImageUrlChange: PropTypes.func,\r\n    onRandomButtonBlur: PropTypes.func\r\n};\r\nRandomPhoto.defaultProps = {\r\n    name: '',\r\n    imageUrl: '',\r\n    onImageUrlChange: null,\r\n    onRandomButtonBlur: null\r\n};\r\nconst getRandomImageUrl = () => {\r\n    const randomId = Math.trunc(Math.random() * 2000);\r\n    return `https://picsum.photos/id/${randomId}/300/300`;\r\n}\r\n\r\n\r\nfunction RandomPhoto(props) {\r\n    const { name, imageUrl, onImageUrlChange, onRandomButtonBlur } = props;\r\n    const handleRandomPhotoClick = async () => {\r\n        if (onImageUrlChange) {\r\n            const randomImageUrl = getRandomImageUrl(); // khi image thay doi thi re-render 1 url moi\r\n            onImageUrlChange(randomImageUrl);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"random-photo\">\r\n            <div className=\"random-photo__button\">\r\n                <Button\r\n                    outline\r\n                    color=\"primary\"\r\n\r\n                    name={name}\r\n                    onBlur={onRandomButtonBlur}\r\n                    onClick={handleRandomPhotoClick}\r\n                >Random a Photo</Button>\r\n            </div>\r\n            <div className=\"random-photo__photo\">\r\n                {imageUrl &&\r\n                    <img\r\n                        src={imageUrl}\r\n                        alt=\"Oops Not Found ... Please Click Button One more time!!! \"\r\n                        onError={handleRandomPhotoClick}\r\n                    />}\r\n                <a href={imageUrl} target=\"_blank\" >{imageUrl}</a>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RandomPhoto;","  \r\n\r\nimport RandomPhoto from 'components/RandomPhoto';\r\nimport { ErrorMessage } from 'formik';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport { FormFeedback, FormGroup, Label } from 'reactstrap';\r\n\r\nRandomPhotoField.propTypes = {\r\n  field: PropTypes.object.isRequired,\r\n  form: PropTypes.object.isRequired,\r\n\r\n  label: PropTypes.string,\r\n};\r\n\r\nRandomPhotoField.defaultProps = {\r\n  label: '',\r\n}\r\n\r\nfunction RandomPhotoField(props) {\r\n  const { field, form, label } = props;\r\n  const { name, value, onBlur } = field;\r\n  const { errors, touched } = form;\r\n  const showError = errors[name] && touched[name];\r\n\r\n  const handleImageUrlChange = (newImageUrl) => {\r\n    form.setFieldValue(name, newImageUrl)\r\n  }\r\n\r\n  return (\r\n    <FormGroup>\r\n      {label && <Label for={name}>{label}</Label>}\r\n\r\n      <RandomPhoto\r\n        name={name}\r\n        imageUrl={value}  // gias trij mowi : newImageUrl\r\n        onImageUrlChange={handleImageUrlChange}\r\n        onRandomButtonBlur={onBlur}\r\n      />\r\n\r\n      <div className={showError ? 'is-invalid' : ''}></div>\r\n      <ErrorMessage name={name} component={FormFeedback} />\r\n    </FormGroup>\r\n  );\r\n}\r\n\r\nexport default RandomPhotoField;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Select from 'react-select';\r\nimport { PHOTO_CATEGORY_OPTIONS } from 'constants/global';\r\nimport { Button, FormGroup, Input, Label, Spinner } from 'reactstrap';\r\nimport { FastField, Form, Formik } from 'formik';\r\nimport InputField from 'custom-fields/InputField';\r\nimport SelectField from 'custom-fields/SelectField';\r\nimport RandomPhotoField from 'custom-fields/RandomPhotoField';\r\nimport * as Yup from 'yup';\r\nimport './index.scss';\r\n\r\n\r\nPhotoForm.propTypes = {\r\n    onSubmit: PropTypes.func\r\n};\r\nPhotoForm.defaultProps = {\r\n    onSubmit: null\r\n}\r\n\r\nfunction PhotoForm(props) {\r\n    // const initialValues = {\r\n    //     title: '',   // không bao giờ sài undefind vì nếu chọn control sẽ thành uncontrol\r\n    //     // name:'' // thêm trường name\r\n    //     categoryId: null,\r\n    //     photo: ''\r\n    // }\r\n    const { initialValues, isAddMode } = props; // nhan initialValues tu thang cha\r\n    // Định nghĩa 1 schema để validate object initialValues bằng Yup ( Formik đã tích hợp sẵn hàm isValid của Yup)\r\n    const validationSchema = Yup.object().shape({\r\n        title: Yup.string().required('This field is required.'),\r\n\r\n        categoryId: Yup.number().required('This field is required.').nullable(), //cho phép giá trị bị set null báo lỗi\r\n\r\n        photo: Yup.string().required('This field is required.'),\r\n        // photo: Yup.string().when('categoryId', {\r\n        //     is: 1,\r\n        //     then: Yup.string().required('This field is required.'),\r\n        //     otherwise: Yup.string().notRequired(),\r\n        //   })\r\n    })\r\n\r\n    return (\r\n\r\n        <Formik\r\n            initialValues={initialValues}\r\n            validationSchema={validationSchema}\r\n            onSubmit={props.onSubmit}>\r\n\r\n            {formikProps => {\r\n                const { values, errors, touched, isSubmitting } = formikProps;\r\n                console.log({ values, errors, touched });\r\n\r\n\r\n                return (\r\n                    <Form>\r\n                        {/* COntrol */}\r\n                        <FastField   //giống boo, sẽ chỉ re-render lại khi tác động tới field của nó   //trong trường hợp các form lặp lặp với những field khác trong form thì dùng fastfield, còn nếu phụ thuộc lẫn nhau thì dùng field\r\n                            //props cua Fastfield\r\n                            name=\"title\"\r\n                            component={InputField}\r\n\r\n                            //nhung thu ta truyen vao InputField\r\n                            label=\"Title\"\r\n                            placeholder=\"Eg: Wow nature...\"\r\n                        />\r\n                        {/* <FastField   //Control Name\r\n                            //props cua Fastfield\r\n                            name=\"name\" \r\n                            component={InputField} \r\n\r\n                            //nhung thu ta truyen vao InputField\r\n                            label=\"name\"\r\n                            placeholder=\"Eg: Wow nature...\"\r\n                        /> */}\r\n                        {/* <FormGroup>   === Fastfield ở trên\r\n                            <Label for=\"titleId\">Title</Label>\r\n                            <Input name=\"title\" id=\"titleId\" placeholder=\"Eg: Wow nature...\" />\r\n                        </FormGroup> */}\r\n\r\n                        <FastField\r\n                            name=\"categoryId\"\r\n                            component={SelectField}\r\n\r\n                            label=\"Category\"\r\n                            placeholder=\"What's your photo category?\"\r\n                            options={PHOTO_CATEGORY_OPTIONS}\r\n                        />\r\n                        {/* <FormGroup>\r\n                            <Label for=\"categoryId\">Category</Label>\r\n                            <Select\r\n                                name=\"categoryId\"\r\n                                id=\"categoryId\"\r\n                                placeholder=\"What's your photo category?\"\r\n                                options={PHOTO_CATEGORY_OPTIONS}\r\n                            />\r\n                        </FormGroup> */}\r\n                        <FastField\r\n                            name=\"photo\"\r\n                            component={RandomPhotoField}\r\n                            label=\"Photo\"\r\n                        />\r\n                        <FormGroup>\r\n                            <Button className=\"add-to-album\" type=\"submit\" color={isAddMode ? \"primary\" : \"success\"} >\r\n                                {isSubmitting && <div class=\"loader\"></div>}\r\n                                {isAddMode ? 'Add to Album' : 'Update your Photo '}</Button>\r\n                        </FormGroup>\r\n                    </Form>\r\n                )\r\n            }}\r\n        </Formik>\r\n\r\n    );\r\n}\r\n\r\nexport default PhotoForm;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './style.scss';\r\nimport PhotoForm from 'features/Photo/components/PhotoForm';\r\nimport Banner from 'components/Banner';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addPhoto, updatePhoto } from 'features/Photo/photoSlice';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { randomNumber } from 'utils/comon';\r\nAddEditPage.propTypes = {\r\n\r\n};\r\n\r\nfunction AddEditPage(props) {\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const { photoId } = useParams();  // photoId tu Index routing // useParam trả về 1object, có bao nhiêu biến trên url thì trả về bấy nhiêu\r\n\r\n\r\n    const isAddMode = !photoId; // trang này sẽ là Add photo nếu đường dẫn không có idphoto\r\n\r\n    const editedPhoto = useSelector(state => {\r\n        return state.photos.find(x => x.id === +photoId) // chuyen photoId ve number\r\n\r\n    }); // laasy trong redux cai list cua minh, tim thang nao co id === idPhoto param\r\n    const initialValues = isAddMode // neeus la isAddmode thi se lay thang hien tai\r\n        ? {\r\n            title: '',\r\n            categoryId: null,\r\n            photo: ''\r\n        }\r\n        : editedPhoto;\r\n    console.log({ photoId, editedPhoto });\r\n    const handleSubmit = (values) => {\r\n        // console.log('Form Submit: ', values)\r\n        // const action = addPhoto(values);\r\n        // console.log({action});\r\n        // dispatch(action);\r\n\r\n        // history.push('/photos');\r\n        return new Promise(resolve => {\r\n            console.log('Form submit: ', values);\r\n\r\n            setTimeout(() => {\r\n                if (isAddMode) {\r\n\r\n                    const newPhoto = {\r\n                        ...values,\r\n                        id: randomNumber(10000, 99999)\r\n                    }\r\n                    const action = addPhoto(newPhoto);\r\n                    console.log({ action });\r\n                    dispatch(action);\r\n                } else {\r\n                    const action = updatePhoto(values);\r\n                    dispatch(action);\r\n                }\r\n                history.push('/photos');\r\n                resolve(true);\r\n\r\n            }, 2000);\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className=\"photo-edit\">\r\n            <Banner title=\"Pick your amazing photo\" />\r\n            <div className=\"photo-edit__form\">\r\n                <PhotoForm\r\n                    isAddMode={isAddMode}\r\n                    initialValues={initialValues}\r\n                    onSubmit={handleSubmit} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AddEditPage;","export const randomNumber = (min, max) => {\r\n    return min + Math.trunc(Math.random() * (max - min));\r\n  }","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    useRouteMatch\r\n  } from \"react-router-dom\";\r\n\r\n\r\nimport NotFound from 'components/NotFound';\r\nimport MainPage from './pages/Main';\r\nimport AddEditPage from './pages/AddEdit';\r\n\r\nPhoto.propTypes = {\r\n    \r\n};\r\n\r\nfunction Photo(props) {\r\n    const match = useRouteMatch();\r\n    console.log({match});\r\n\r\n    return (\r\n        <Switch>\r\n            <Route exact path={match.url} component={MainPage} />\r\n\r\n            <Route  path={`${match.url}/add`} component={AddEditPage} />\r\n            <Route path={`${match.url}/:photoId`} component={AddEditPage} />\r\n            <Route component={NotFound} />\r\n        </Switch>\r\n    );\r\n}\r\n\r\nexport default Photo;"],"sourceRoot":""}